@page "/tournamentSetup"
@inject NotifierService Notifier
@using System.Text.Json

<PageTitle>Tournament setup</PageTitle>

<MudContainer>
    <WebGUI.Components.Layout.ExperimentalLayout.MarkDigComponent FileName="Tournament.json.md" />
</MudContainer>
<style>
  body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
    line-height: 1.6;
    color: #e2e8f0;
    max-width: 1200px;
    margin: 0 auto;
  }

  .container {
    border-radius: 10px;
    box-shadow: 0 4px 20px rgba(0,0,0,0.4);
    border: 1px solid #2d3748;
  }

  h1 {
    color: #90cdf4;
    border-bottom: 3px solid #4299e1;
    padding-bottom: 10px;
    margin-bottom: 30px;
    text-shadow: 0 0 10px rgba(66, 153, 225, 0.3);
  }

  h2 {
    color: #a0aec0;
    margin-top: 35px;
    margin-bottom: 20px;
    border-left: 4px solid #4299e1;
    padding-left: 15px;
  }

  h3 {
    color: #cbd5e0;
    margin-top: 25px;
    margin-bottom: 15px;
  }

  .intro {
    font-size: 1.1em;
    color: #a0aec0;
    margin-bottom: 30px;
    padding: 20px;
    background-color: #2d3748;
    border-radius: 8px;
    border-left: 4px solid #4299e1;
    box-shadow: inset 0 1px 3px rgba(0,0,0,0.2);
  }

  .important {
    background-color: #2c5aa0;
    border: 1px solid #4299e1;
    border-radius: 8px;
    padding: 20px;
    margin: 20px 0;
    box-shadow: 0 2px 8px rgba(66, 153, 225, 0.2);
  }

    .important strong {
      color: #90cdf4;
    }

  ul {
    margin-left: 20px;
  }

  li {
    margin-bottom: 8px;
    color: #e2e8f0;
  }

    li strong {
      color: #90cdf4;
    }

  .nested-list {
    margin-top: 10px;
    margin-left: 20px;
  }

    .nested-list li {
      margin-bottom: 5px;
      color: #cbd5e0;
    }

  .code-block {
    background-color: #171923;
    color: #e2e8f0;
    padding: 20px;
    border-radius: 8px;
    font-family: 'Consolas', 'Monaco', 'Courier New', monospace;
    font-size: 14px;
    overflow-x: auto;
    margin: 20px 0;
    border: 1px solid #2d3748;
    box-shadow: inset 0 2px 4px rgba(0,0,0,0.3);
  }

  .inline-code {
    background-color: #2d3748;
    color: #90cdf4;
    padding: 3px 8px;
    border-radius: 4px;
    font-family: 'Consolas', 'Monaco', 'Courier New', monospace;
    font-size: 0.9em;
    border: 1px solid #4a5568;
  }

  .analysis-modes {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 20px;
    margin: 20px 0;
  }

  .mode-card {
    padding: 20px;
    border: 2px solid #2b6cb0;
    border-radius: 8px;
    background-color: #1e3a5f;
    box-shadow: 0 4px 12px rgba(43, 108, 176, 0.2);
  }

    .mode-card h4 {
      color: #90cdf4;
      margin-top: 0;
      margin-bottom: 10px;
    }

    .mode-card p {
      color: #cbd5e0;
    }

  .feature-list {
    background-color: #2d3748;
    padding: 20px;
    border-radius: 8px;
    margin: 15px 0;
    border: 1px solid #4a5568;
  }

  .divider {
    border: 0;
    height: 2px;
    background: linear-gradient(to right, #4299e1, #667eea);
    margin: 40px 0;
    box-shadow: 0 0 10px rgba(66, 153, 225, 0.3);
  }

  /* JSON syntax highlighting for dark theme */
  .code-block {
    color: #e2e8f0;
  }

  /* Scrollbar styling for dark theme */
  ::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }

  ::-webkit-scrollbar-track {
    background: #1a202c;
  }

</style>


@code {

  string engineDefFolderPath = "C:/Dev/Chess/Engines/EngineDefs";

  private async Task CreateTournamentFile()
  {
    //a template file is located in the EngineBattle/WebGUI/Data folder
    var relativePath = "Data/tournamentTemplate.json"; // Specify the relative path to the file
    var currentDirectory = Directory.GetCurrentDirectory();
    var fullPath = Path.Combine(currentDirectory, relativePath);
    Console.WriteLine(fullPath);
    //read the file
    var json = await File.ReadAllTextAsync(fullPath);

    //write the file to the wwwroot folder
    var rootFolder = Path.Combine(currentDirectory, "wwwroot");
    var filePath = Path.Combine(rootFolder, "tournament.json");
    if (File.Exists(filePath))
    {
      Console.WriteLine("File already exists");
      return;
    }
    await File.WriteAllTextAsync(filePath, json);
    await Notifier.RefreshNavMenu(true);
  }

  private async Task CreateEngineDefFile()
  {
    //a template file is located in the EngineBattle/WebGUI/Data folder
    var relativePath = "Data/SFDef.json"; // Specify the relative path to the file
    var currentDirectory = Directory.GetCurrentDirectory();
    var fullPath = Path.Combine(currentDirectory, relativePath);
    Console.WriteLine(fullPath);
    var json = await File.ReadAllTextAsync(fullPath);

    var filePath = Path.Combine(engineDefFolderPath, "SFDef.json");
    
    //create folder if not exists
    if (!Directory.Exists(engineDefFolderPath))
    {
      Directory.CreateDirectory(engineDefFolderPath);
    }

    if (File.Exists(filePath))
    {
      Console.WriteLine("File already exists");
      return;
    }
    await File.WriteAllTextAsync(filePath, json);
  }

  private async Task CreateLc0EngineDefFile()
  {
    //a template file is located in the EngineBattle/WebGUI/Data folder
    var relativePath = "Data/Lc0Def.json"; // Specify the relative path to the file
    var currentDirectory = Directory.GetCurrentDirectory();
    var fullPath = Path.Combine(currentDirectory, relativePath);
    Console.WriteLine(fullPath);
    var json = await File.ReadAllTextAsync(fullPath);

    var filePath = Path.Combine(engineDefFolderPath, "Lc0Def.json");
    
    //create folder if not exists
    if (!Directory.Exists(engineDefFolderPath))
    {
      Directory.CreateDirectory(engineDefFolderPath);
    }
    
    if (File.Exists(filePath))
    {
      Console.WriteLine("File already exists");
      return;
    }
    await File.WriteAllTextAsync(filePath, json);
  }

}
