@page "/minimalPGN"
@inject ILogger<MinimalPGNCreator> logger
@using System.Text.Json

<InputFile id="fileInput" OnChange="@OpenPGNFile" hidden />

<PageTitle>CreateMinimalOpening</PageTitle>

<MudText Class="mt-10 ml-5 p-10 mb-4" Typo="Typo.h4">Create minimal PGN-file with annotation removed</MudText>
<MudItem Class="d-flex mt-5 ml-5">
	<MudItem sm="4">
		<MudTextField HelperText="Write complete path to file" Placeholder="Write complete path to file" T="string" Typo="Typo.h6" Text="@minimalPGNpath" @bind-value="minimalPGNpath"></MudTextField>
		<MudFab Class="ml-3 mb-3 mt-6" HtmlTag="label" Color="Color.Default" Label="Load pgn file" Size="Size.Large" StartIcon="@Icons.Material.Filled.DownloadForOffline" for="fileInput" />
	</MudItem>
</MudItem>

@code {

	IBrowserFile browserFile;
	private string minimalPGNpath = "C:/Dev/Chess/PGNs/minimalPGN1.pgn";

	private async Task OpenPGNFile(InputFileChangeEventArgs e)
	{
		var pgnName = e.File.Name;
		logger.LogInformation("PGN file opened {File}", pgnName);
		logger.LogInformation("Minimal PGN written to path", minimalPGNpath);
		var env = Environment.CurrentDirectory;
		var fullPath = Path.Combine(env, pgnName);
		await using (FileStream fs = new(fullPath, FileMode.Create))
		{
			browserFile = e.File;
			await browserFile.OpenReadStream(maxAllowedSize: 1024 * 300000).CopyToAsync(fs);
		}

		var games = Parser.PGNParser.parsePgnFile(fullPath);//.ToList();
		PGNWriter.writeMinimalPgnFile(games, minimalPGNpath);
		logger.LogInformation($"Done with writing minimal PGN file to {minimalPGNpath}");
		File.Delete(fullPath);
		await Task.CompletedTask;
	}


}
